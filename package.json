{
  "name": "com.unity.memoryprofiler",
  "displayName": "Memory Profiler",
  "version": "1.1.9",
  "unity": "2022.3",
  "description": "The Memory Profiler offers a unified solution allowing you to profile both small projects on mobile devices and big AAA projects on high end machines. It provides actionable information about allocations in the engine to allow developers to manage and reduce memory usage.",
  "keywords": [
    "profiler",
    "memory",
    "memoryprofiler",
    "snapshot",
    "profiling",
    "tool"
  ],
  "dependencies": {
    "com.unity.editorcoroutines": "1.0.0",
    "com.unity.collections": "1.2.3",
    "com.unity.mathematics": "1.2.1",
    "com.unity.burst": "1.8.0",
    "com.unity.profiling.core": "1.0.0"
  },
  "relatedPackages": {
    "com.unity.memoryprofiler.tests": "1.1.9"
  },
  "_upm": {
    "changelog": "### Changed\n- Renamed Unknown to Unrooted as that more properly describes these allocations. Further, if a snapshot is taken from a Player or Editor is started with the commandline option `-enable-memoryprofiler-callstacks` (only available for 6000.3 or newer, for older versions Unity's source code would have to have been compiled with the precompiler directive `ENABLE_STACKS_ON_ALL_ALLOCS`) AND when doing so on a Unity version where the bug ([UUM-116049](https://issuetracker.unity3d.com/product/unity/issues/guid/UUM-116049)) has been fixed, AND if the Unity Editor opening the snapshot is in `internal mode`, then the Unrooted allocations are split out into the Memory Labels which had been used for their allocation. Note: this is predominantly a debug tool for Unity Engine developers to fix their unrooted allocations."
  },
  "upmCi": {
    "footprint": "ed6e9a54e66b5d8209a954e8fdbe0822b378ac8e"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.memoryprofiler@1.1/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.memoryprofiler.git",
    "type": "git",
    "revision": "c4494933e54217e8f082621c4d851df48eeecfdb"
  }
}
