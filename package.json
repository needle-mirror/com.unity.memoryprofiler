{
  "name": "com.unity.memoryprofiler",
  "displayName": "Memory Profiler",
  "version": "1.1.8",
  "unity": "2022.3",
  "description": "The Memory Profiler offers a unified solution allowing you to profile both small projects on mobile devices and big AAA projects on high end machines. It provides actionable information about allocations in the engine to allow developers to manage and reduce memory usage.",
  "keywords": [
    "profiler",
    "memory",
    "memoryprofiler",
    "snapshot",
    "profiling",
    "tool"
  ],
  "dependencies": {
    "com.unity.editorcoroutines": "1.0.0",
    "com.unity.collections": "1.2.3",
    "com.unity.mathematics": "1.2.1",
    "com.unity.burst": "1.8.0",
    "com.unity.profiling.core": "1.0.0"
  },
  "relatedPackages": {
    "com.unity.memoryprofiler.tests": "1.1.8"
  },
  "_upm": {
    "changelog": "### Added\n- Adde an option to the Memory Profiler preferences to consider all pointer sized fields as potential pointers to native allocations. By default such fields are only considered when they are found on types in the `Unity.Entites` namespace, which helps analyse DOTS and Entities usage of unmanaged memory. Turning this option on can improve reference discovery for native memory, but can also produce false positives and slow down snapshot opening times. If you want to make your own usages of memory allocated vie `UnsafeUtility` easier, it is recommended to instead store references to it as actual pointers or `IntPtr`s.\n\n### Fixed\n- Compilation issues on Unity versions between 6000.0.0a1 and 6000.0.52f1.\n- UI issues due to too long paths and resulting failures to import the files.\n- Fixed potential duplicates in Unity Objects table not finding potential duplicates if their resident memory size differs ([PROFB-367](https://issuetracker.unity3d.com/product/unity/issues/guid/PROFB-367)).\n- Fixed discrepancies in the resident amounts given for native and managed memory on the Summary page compared to the All Of Memmory Page when inspecting captures from IL2CPP. The resident amounts used for the VM memory where not properly reattributed.\n\n### Changed\n- Improved the analysis of managed data to find DOTS/Entites related references to unmanaged memory when that memory is referenced from types in the `Unity.Entites` namespace.\n- Switched on resident memory breakdown for the managed memory section on the Summary page."
  },
  "upmCi": {
    "footprint": "db1389dc75617829209c332b3c9a6925f23ccec5"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.memoryprofiler@1.1/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.memoryprofiler.git",
    "type": "git",
    "revision": "24dcaa42bacc7bb770cc54b2e9280f96d20e8431"
  }
}
